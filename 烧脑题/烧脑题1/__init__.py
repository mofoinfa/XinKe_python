# 1.1
# 从键盘接受一个正整数，列出该数字的中文表示格式，例如：键盘输入 123，打印出一二三；键盘输入 3103，打印出三一零三.（考验循环和列表的索引使用）
#
# 1.2
# 门票的序列号必定是系统里总序列的子序列，请你核对门票的真实性。
# 从键盘接收两个字符串a 和b，请你判断字符串a 是否包含字符串b，是的话输出“Yes”，否则输出“No”。有多组测试用例，每个测试用例占一行，两个字符串之间用空格隔开。
# 例如：输入JavaStudy Java 则输出Yes     Student School 则输出 No
# 注意 ：判断后者是否存在与前者里面  请用循环完成
#
# 答案：
# a = 'JavaStudy Java'  # Study，Student School
# # a = 'Student School'
#
# str1, str2 = a.split()
# for i in range(len(str1) - len(str2) + 1):
#     if str2 == str1[i:i + len(str2)]:
#         print('YES')
#         break
# else:
#     print('NO')
#
#
# 1.3 中国结
# 公司现在需要打印中国结的主结(位于中间，最大的那一个结)，为了打印出漂亮新颖的主结，于是设计打印主结的长度满足可以被 7 整除这个条件。现在公司需要统计某个范围内
# 能被 7 整除的整数的个数，以及这些能被 7 整除的数的和。
# 从键盘上输入一个整数 N，输出 1~N 之间能被 7 整除的整数的数，以及这些能被 7 整除的数的和
#
# 1.4 项列求和
# 有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13 … 求出这个数列的前 20 项之和。要求：利用循环计算该数列的和。注意分子分母的变化规律。
# 注意：
# a1=2,	b1=1,	c1=a1/b1; a2=a1+b1, b2=a1, c2=a2/b2; a3=a2+b2, b3=a2, c3=a3/b3;
# …
# s = c1+c2+…+c20;
# s 即为分数序列：2/1，3/2，5/3，8/5，13/8，21/13 … 的前 20 项之和。

# # 1.5
# # 一个球从 100 米高度自由落下，每次落地后反弹回原高度的一半，再落下，再反弹。
# # 求它在第十次落地时，球共经过多少米? 第十次反弹多高?
# #
# sum_h = 0
# h = 100
# for i in range(10):
#     sum_h += h#相加下落的高度
#     h = h / 2
#     sum_h += h#相加反弹的高度
# print(f'球经过{sum_h-h}米')
# print(f'第十次反弹{h}米高')


# # #
# # 1.6
# # 求奇数、
# # 编写程序实现：从键盘输入正整数 s，从低位开始取出 s 中的奇数位上的数，依次构成一个新数 t，
# # 高位仍放在高位，低位仍放在低位，最后在屏幕上输出 t。例如，当 s 中的数为 7654321 时，t 中的数为 7531。
# #
# num = int(input('输入一个正整数:'))
# i = 1  # 循环次数判断奇、偶
# remainder = 0  # 余数
# t = 0
# mul = 1  # 乘数
# if num / 10 == 0:
#     t = num % 10
# else:
#     while num:
#         if i % 2 != 0:
#             t += num % 10 * mul
#             mul = mul * 10
#         num = num // 10
#         i += 1
# print(f't的值是{t}')


# # 1.7
# # 在一个停车场内，汽车、摩托车共停了 48 辆，其中每辆汽车有 4 个轮子，每辆摩托车
# # 有 3 个轮子，这些车共有 172 个轮子，编程输出停车场内有汽车和摩托车的数量。
# #
# i = 0  # 汽车数量
# for i in range(1, 49):
#     if i * 4 + (48 - i) * 3==172:
#         print(f"汽车数量是:{i},摩托车数量是：{48-i}")

# # 1.8
# # 小明今天参加了“校园歌手大赛”，评委的打分规则是去掉一个最低分和一个最高分后算出剩下分数的平均分，你能帮助小明快速的算出平均分吗？	（评委数量必须大于 2）
# # 输入说明：首先输入一个整数 n，代表评委人数，然后输入 n 个数。请按照题目的计算规则计算出平均分然后输出。
# # 例如输入： 6
# # 100 90 90 80 85 95
# # 按照题目注意计算平均分并输出： 90.0
# #
# point = []
# n = int(input('输入评委人数:'))
# for i in range(n):
#     point.append(int(input(f'输入第{i + 1}次分数:')))
# point.remove(max(point))
# point.remove(min(point))
# print(f'平均分为：{sum(point)/len(point)}')


# # 1.9九九乘法表
# # 选择乘法口诀助记功能，输出阶梯形式的 9*9 乘法口诀表
# #
# for i in range(1, 10):
#     for j in range(1, i+1):
#         print(f'{i}X{j}={i * j}', end=' ')
#     print()


# # 1.10
# # 输入一个字符串统计每个字符在字符串中出现的次数。
# #
# char = input('请输入一个字符串:')
# data = []
# count = []
# for i in char:
#     if i in data:
#         count[data.index(i)] += 1
#     else:
#         data.append(i)
#         count.append(1)
# for i in range(len(data)):
#     print(f'{data[i]}:{count[i]}次')


# # 1.11
# # 有 n 盏灯，编号 1～n（0<n<100）。第 1 个人把所有灯打开，第 2 个人按下所有编号为
# # 2 的倍数的开关（这些灯将被关掉），第 3 个人按下所有编号为 3 的倍数的开关（其中关掉的灯将被打开，开着的灯将被关闭），
# # 依次类推。输入灯数和人数，输出开着的灯的编号。
# # 比如输入：10 2 输出最后亮灯的编号：1,3,5,7,9 注意：使用循环语句实现。
# #
# n = int(input('输入灯的数量:'))
# x = int(input('输出编号：'))
# led = []
# # 使输入的所有灯打开
# for i in range(n + 1):
#     led.append(1)
# for i in range(2, x + 1):
#     for j in range(i, n + 1, i):
#         led[j] = -led[j]
# print(led)
# for i in range(1, n + 1):
#     if led[i] == 1:
#         print(i, end=',')

# # 冒泡排序、
# # 原始数组：[1,9,3,7,4,2,5,0,6,8]
# # 排序后：[0,1,2,3,4,5,6,7,8,9]；
# # 要求：综合使用分支、循环结构语句实现，直接输出结果不计分。打印每一次运行的结果
# #
# initial = [1, 9, 3, 7, 4, 2, 5, 0, 6, 8]  # 初始值
# temp = 0  # 中间值转化
# for i in range(len(initial)):
#     for j in range(len(initial) - i-1):
#         if initial[j] > initial[j + 1]:
#             temp = initial[j]
#             initial[j] = initial[j + 1]
#             initial[j + 1] = temp
#     print(f'第{i+1}轮变化结果：{initial}')

# # 1.13
# # 动物园饲养的食肉动物分大型动物和小型动物两类，规定老虎、狮子一类的大动物每次喂肉每头三斤，
# # 狐狸、山猫一类小动物每三头喂一斤。该动物园共有这两类动物 100 头，每
# # 次需喂肉 100 斤，编程输出大、小动物的数量。
# #
# for big in range(1, 101):
#     if 3 * big + 1 / 3 * (100 - big) == 100:
#         print(f'大型动物{big}，小型动物{100 - big}')

# # 1.14
# # 从键盘接收一个整数 n(n>=4)，请打印一个由“*”号组成的长度和宽度均为 n 的空心矩形。例如输入：4 你要在屏幕打印如下图形：
# # ****
# # *  *
# # *  *
# # ****
# n = int(input('请输入一个整数n：'))
# for i in range(n):
#     for j in range(n):
#         if i == 0 or j == 0 or i == n - 1 or j == n - 1:
#             print('*', end=' ')
#         else:
#             print(' ', end=' ')
#     print()

# #
# # 1.15
# # 注意输出指定空心正方形。输入第一个数字为边长，第二个字符为组成图形边的字符。例如：输入
# # 4 a  （4为空心正方形的大小，a为显示的字符）
# # 输出
# # aaaa
# # a  a
# # a  a
# # aaaa
# n = int(input('请输入一个整数n：'))
# char = input('请输入显示字符:')
# for i in range(n):
#     for j in range(n):
#         if i == 0 or j == 0 or i == n - 1 or j == n - 1:
#             print(f'{char}', end=' ')
#         else:
#             print(' ', end=' ')
#     print()
