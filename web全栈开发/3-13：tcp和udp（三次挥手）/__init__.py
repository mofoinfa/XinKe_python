# 家庭作业
# 1、简述TCP连接建立的时候，3次握手的具体过程。
#
# 2、简述TCP断开连接的过程。
#
# 3、TCP为什么连接是3次，断开是4次？

# 所学内容
# 一、udp创建服务
# 1.导入模块
# import socket
# 2.建立udp服务器套接字
# udp_server=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
# 3.绑定服务器套接字
# udp_server.bind(('服务器地址',端口号))
# 4.接收信息
# msg,addr=udp_server.recvfrom(1024)#1024为传送数据的大小
# 5.发送信息
# udp_server.sendto('内容'.encode(),addr（地址）)
# 6.实战：利用udp建立简单的聊天实例
# 代码:见udp.py
import socket

# 二、tcp套接字
# 1.导入模块
# import socket

# 2.建立udp服务器套接字
# tcp_server=socket.socket(socket.AF_INET,socket.SocketType)
#
# 3.监听
# tcp_server.listen(5)#5为时间
#
# 4.连接服务器
# tcp_server.connect_ex(('服务器地址',端口号))
#
# 5.接收客户端连接
# conn,addr=tcp_server.accept()
# <1>addr:为一个列表
# <2>conn:连接对象
#
# 6.接收信息
# data=conn.recv(1024)#输出data需要解密，data.encode()
#
# 7.发送消息
# tcp_server.send('你好'.encode('utf-8'))

# 8.实战：客户端利用tcp协议同时和多个客户进行交谈
# 代码：如tcp.py文件

# 三、三次握手和四次挥手
# 1、三次握手
#                    第一次
# 客户端----------------------------------->服务端
#       syn:1  #发送连接请求
#       seq=x  #发送一个序列号
#                    第二次
# 服务端----------------------------------->客户端
#       syn:1  #发送连接请求
#       seq=y  #发送一个序列号
#       ack=x+1#回复客户端的序列号+1，确认连接
#                    第三次
# 客户端----------------------------------->服务端
#       ack=y+1#回复服户端的序列号+1，确认连接
#
# 2.四次挥手
#                     第一次
# 服务端----------------------------------->客户端
#       FIN:1  #发送断开请求
#
#       ack=y+1#回复服户端的序列号+1，确认连接
#       seq=x+2  #发送一个序列号
#                     第二次
# 客户端----------------------------------->服务端
#       ack=x+3#回复客户端的序列号+3，确认连接
#
#                     第三次
# 客户端----------------------------------->服务端
#       FIN:1  #发送断开请求
#       seq=y+1#发送一个序列号+1
#
#                     第四次
# 服务端----------------------------------->客户端
#       ack=y+2#回复客户端的序列号+2，确认连接
